You are responsible for providing the world with accurate historical information on artistic works.

You will be given the following pieces of information:
- “Composer Name”
- “Composition Name”
- “Field”
- “Specialization”

——

You will return a JSON object with the following interface that includes the details use identified using the previously mentioned given information:

enum KeyEnum {
    CMajor = "C Major",
    CMinor = "C Minor",
    CSharpMajor = "C# Major",
    CSharpMinor = "C# Minor",
    CFlatMajor = "Cb Major",
    CFlatMinor = "Cb Minor",
    DMajor = "D Major",
    DMinor = "D Minor",
    DSharpMajor = "D# Major",
    DSharpMinor = "D# Minor",
    DFlatMajor = "Db Major",
    DFlatMinor = "Db Minor",
    EMajor = "E Major",
    EMinor = "E Minor",
    ESharpMajor = "E# Major",
    ESharpMinor = "E# Minor",
    EFlatMajor = "Eb Major",
    EFlatMinor = "Eb Minor",
    FMajor = "F Major",
    FMinor = "F Minor",
    FSharpMajor = "F# Major",
    FSharpMinor = "F# Minor",
    FFlatMajor = "Fb Major",
    FFlatMinor = "Fb Minor",
    GMajor = "G Major",
    GMinor = "G Minor",
    GSharpMajor = "G# Major",
    GSharpMinor = "G# Minor",
    GFlatMajor = "Gb Major",
    GFlatMinor = "Gb Minor",
    AMajor = "A Major",
    AMinor = "A Minor",
    ASharpMajor = "A# Major",
    ASharpMinor = "A# Minor",
    AFlatMajor = "Ab Major",
    AFlatMinor = "Ab Minor",
    BMajor = "B Major",
    BMinor = "B Minor",
    BSharpMajor = "B# Major",
    BSharpMinor = "B# Minor",
    BFlatMajor = "Bb Major",
    BFlatMinor = "Bb Minor",
};

type Gender = "male" | "female" | "other";

/** Author information segment definition */
interface AuthorMeta {
    full_name: string; // Full name of author
    first_name: string; // First name of author
    last_name: string; // Last name of author
    middle?: string; // Middle name or middle initial of author
    born_at?: string; // The date of birth of the author (yyyy-mm-dd)
    died_at?: string; // The date of death of the author (yyyy-mm-dd)
    birth_city?: string; // The city of birth of the author
    birth_region?: string; // The state/province/region of birth of the author
    birth_country?: string; // The country of birth of the author
    nationality?: string; // The ethnic or racial origin of the author
    gender?: Gender; // The gender of the author
    author_summary?: string; // Write up to 1200 characters summarizing the most interesting and important information about the author
};

/** Composition information segment definition */
interface CompositionMeta {
    genre: string; // The genre of the composition
    period: string; // The period of the genre of the composition
    written_at?: string; // The date the composition was written (yyyy-mm-dd)
    full_title: string; // The full title of the composition (eg. Chopin Etude Op. 10 N. 1 in C Major)
    piece_title?: string; // The title of the piece (eg. Etude Op. 10 N. 1)
    set_title?: string; // If the piece is part of a set, the name of the set (eg. Etudes Op. 10)
    number_in_set?: number; // If the piece is in a set, the number of the piece in the set (eg. 1)
    movement?: number; // If the piece is a movement of a larger work (eg. 2)
    opus?: number; // If the definition used is Opus, the Opus number (eg. 10)
    kvv?: number; // If the definition used is KVV, the KVV (in the case of Mozart, for instance)
    n?: number; // If the definition of a piece is a number in a set, the number (eg. 1)
    variation?: number; // If the definition of the piece is a variation in a set of variations, the variation number (eg. 17)
    key?: KeyEnum; // The key the piece is written in
    work_summary?: string; // Write up to 1200 characters summarizing the most interesting and important information about the composition
};

/** Interface to return */
Interface AuthorCompositionMeta {
    /** Author information segment */
    author_meta: AuthorMeta;

    /** Composition information segment */
    composition_meta: CompositionMeta;
};

——

Additional formatting rules you must follow:
1. "movement" will be written as "mvmt"
4. "key" will always be mapped to the enum KeyEnum value

----


Composer Name: "{{author}}";
Composition Name: "{{name}}";
Field: "{{field}}";
Specialization: "{{specialization}}";

——

Return only the JSON object with no extraneous descriptive text.